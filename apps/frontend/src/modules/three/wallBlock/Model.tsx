/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 model.glb --types --transform
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import model from "./assets/model-transformed.glb";

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cube003: THREE.Mesh;
    Cube004: THREE.Mesh;
    Cube005: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(model) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <pointLight
        intensity={0.13}
        decay={2}
        position={[4.09, 2.85, -3.6]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.13}
        decay={2}
        position={[4.09, 2.85, -1.09]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.13}
        decay={2}
        position={[4.09, 2.85, 1.36]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.13}
        decay={2}
        position={[3.94, 2.85, 4.01]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.13}
        decay={2}
        position={[1.52, 2.84, 4.11]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.13}
        decay={2}
        position={[-1.3, 2.84, 4.11]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.13}
        decay={2}
        position={[-3.72, 2.84, 4.11]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <spotLight
        intensity={2}
        angle={Math.PI / 8}
        penumbra={0.6}
        decay={2}
        position={[3.8, 0.55, 3.8]}
        rotation={[2.76, -0.75, -1.25]}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={materials["Material.001"]}
      />
      <mesh
        geometry={nodes.Cube002.geometry}
        material={materials["Material.004"]}
      />
      <mesh
        geometry={nodes.Cube003.geometry}
        material={materials["Material.004"]}
      />
      <mesh
        geometry={nodes.Cube004.geometry}
        material={materials["Material.002"]}
        position={[5.11, 1.7, -3.01]}
      />
      <mesh
        geometry={nodes.Cube005.geometry}
        material={materials["Material.002"]}
        position={[3.24, 1.7, 5.01]}
        rotation={[0, -Math.PI / 2, 0]}
      />
    </group>
  );
}

useGLTF.preload(model);
