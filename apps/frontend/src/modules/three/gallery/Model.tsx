/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 model.glb --transform --types
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import model from "./assets/model-transformed.glb";

type GLTFResult = GLTF & {
  nodes: {
    stairs4t5: THREE.Mesh;
  };
  materials: {
    ["材質.001"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(model) as GLTFResult;
  return (
    <group {...props} dispose={null} scale={2.5}>
      <pointLight
        intensity={0.8152712}
        decay={2}
        color="#ddd7b9"
        position={[-18.97, 17.03, 14.75]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <pointLight
        intensity={0.32610848}
        decay={2}
        color="#777bd3"
        position={[19.44, 18.54, 14.75]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.stairs4t5.geometry}
        material={materials["材質.001"]}
        position={[4.32, 1.42, -0.62]}
        rotation={[0, -1.57, 0]}
        scale={[1.02, 1, 0.65]}
      />
    </group>
  );
}

useGLTF.preload(model);
