/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 model.glb --transform --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import model from "./assets/model-transformed.glb";

type GLTFResult = GLTF & {
  nodes: {
    立方體: THREE.Mesh
  }
  materials: {
    材質: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(model) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <pointLight intensity={0.144} decay={2} position={[4.09, 2.85, -3.6]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.144} decay={2} position={[4.09, 2.85, -1.09]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.144} decay={2} position={[4.09, 2.85, 1.36]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.144} decay={2} position={[3.94, 2.85, 4.01]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.144} decay={2} position={[1.52, 2.84, 4.11]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.144} decay={2} position={[-1.3, 2.84, 4.11]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.144} decay={2} position={[-3.72, 2.84, 4.11]} rotation={[-Math.PI / 2, 0, 0]} />
      <spotLight intensity={0.24351} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[0.9, 0.55, -4.79]} rotation={[2.76, -0.75, -1.25]} />
      <spotLight intensity={0.24351} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[-4.62, 0.55, 0.95]} rotation={[2.76, -0.75, -1.25]} />
      <mesh geometry={nodes.立方體.geometry} material={materials.材質} scale={[1, 1.6, 1]} />
    </group>
  )
}

useGLTF.preload(model)
